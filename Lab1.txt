Звіт про виконання лабораторної роботи № 1: Структура проєкту ASP.NET Core Веб-застосунку. Розділення моноліту на модулі (шари)

Опис виконаних робіт
На початковому етапі було створено новий проєкт в середовищі розробки Microsoft Visual Studio, використовуючи шаблон ASP.NET Core Web App (Model-View-Controller). Під час налаштування проєкту було обрано тип автентифікації "Облікові записи окремих користувачів" (Individual Accounts), що забезпечує вбудований механізм управління обліковими даними.

Наступним кроком було здійснено розширення стандартного класу користувача IdentityUser. З цією метою було створено користувацький клас WebApplicationUser, який успадковує функціонал IdentityUser та доповнений двома новими властивостями: FirstName та LastName. Клас контексту даних ApplicationDbContext був модифікований для використання розширеної моделі користувача.

Ключовим етапом роботи стало розділення монолітної структури. Для цього в рамках рішення було створено окремий проєкт-бібліотеку з назвою WebApplicationData. До даного проєкту були переміщені всі класи, що відповідають за моделі даних та контекст бази даних. Після переміщення було виконано коригування просторів імен перенесених класів з метою їхньої відповідності новій структурі. Для забезпечення доступу до класів нового модуля в основному проєкті WebApplication1 було встановлено посилання на проєкт WebApplicationData.

Після внесення архітектурних змін було виконано міграцію бази даних. У консолі диспетчера пакетів проєкт WebApplicationData було встановлено як проєкт за замовчуванням, після чого було створено та застосовано нову міграцію. Це дозволило оновити схему бази даних, додавши стовпці FirstName та LastName до таблиці користувачів.

Завершальним етапом стало створення репозиторію на платформі GitHub. Всі виконані зміни були зафіксовані та завантажені у віддалений репозиторій.

Висновок
У ході виконання лабораторної роботи було успішно реалізовано ASP.NET Core веб-застосунок, розширено модель користувача та виконано розділення монолітної структури на окремі модулі. Реалізований підхід відповідає принципам модульного моноліту, що сприяє підвищенню керованості, стабільності та масштабованості системи. Отримані навички є фундаментальними для розробки сучасних програмних рішень.тури на окремі модулі. Реалізований підхід відповідає принципам модульного моноліту, що сприяє підвищенню керованості, стабільності та масштабованості системи. Отримані навички є фундаментальними для розробки сучасних програмних рішень.